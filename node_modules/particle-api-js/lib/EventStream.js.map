{"version":3,"sources":["../src/EventStream.js"],"names":[],"mappings":"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","file":"EventStream.js","sourcesContent":["/* eslint max-depth: 0 */\nimport http from 'http';\nimport https from 'https';\nimport url from 'url';\nimport { EventEmitter } from 'events';\n\nclass EventStream extends EventEmitter {\n\tconstructor(uri, token, options) {\n\t\tsuper();\n\t\tthis.uri = uri;\n\t\tthis.token = token;\n\t\tthis.reconnectInterval = 2000;\n\t\tObject.assign(this, options);\n\t}\n\n\tconnect() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst { hostname, protocol, port, path } = url.parse(this.uri);\n\t\t\tthis.origin = `${protocol}//${hostname}${port ? (':' + port) : ''}`;\n\n\t\t\tconst isSecure = protocol === 'https:';\n\t\t\tconst requestor = isSecure ? https : http;\n\t\t\tconst req = requestor.request({\n\t\t\t\thostname,\n\t\t\t\tprotocol,\n\t\t\t\tpath: `${path}?history_limit=30&access_token=${this.token}`,\n\t\t\t\tmethod: 'get',\n\t\t\t\tport: port || (isSecure ? 443 : 80),\n\t\t\t\tavoidFetch: true,\n\t\t\t\tmode: 'prefer-streaming'\n\t\t\t});\n\n\t\t\tthis.req = req;\n\t\t\tif (this.debug) {\n\t\t\t\tthis.debug(this);\n\t\t\t}\n\n\t\t\treq.on('error', e => {\n\t\t\t\treject({ error: e, errorDescription: `Network error from ${this.uri}` });\n\t\t\t});\n\n\t\t\treq.on('response', res => {\n\t\t\t\tconst statusCode = res.statusCode;\n\t\t\t\tif (statusCode !== 200) {\n\t\t\t\t\tlet body = '';\n\t\t\t\t\tres.on('data', chunk => body += chunk);\n\t\t\t\t\tres.on('end', () => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tbody = JSON.parse(body);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t\tthis.emit('response', {\n\t\t\t\t\t\t\tstatusCode,\n\t\t\t\t\t\t\tbody\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlet errorDescription = `HTTP error ${statusCode} from ${this.uri}`;\n\t\t\t\t\t\tif (body && body.error_description) {\n\t\t\t\t\t\t\terrorDescription += ' - ' + body.error_description;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treject({ statusCode, errorDescription, body });\n\t\t\t\t\t\tthis.req = undefined;\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.data = '';\n\t\t\t\tthis.buf = '';\n\t\t\t\tthis.eventName;\n\t\t\t\tthis.lastEventId;\n\n\t\t\t\tres.on('data', this.parse.bind(this));\n\t\t\t\tres.once('end', this.end.bind(this));\n\t\t\t\tresolve(this);\n\t\t\t});\n\t\t\treq.end();\n\t\t});\n\t}\n\n\tabort() {\n\t\tif (this.req) {\n\t\t\tthis.req.abort();\n\t\t\tthis.req = undefined;\n\t\t}\n\t\tthis.removeAllListeners();\n\t}\n\n\tend() {\n\t\tthis.req = undefined;\n\t\tsetTimeout(() => {\n\t\t\tthis.connect().catch(err => {\n\t\t\t\tthis.emit('error', err);\n\t\t\t\tthis.removeAllListeners();\n\t\t\t});\n\t\t}, this.reconnectInterval);\n\t}\n\n\tparse(chunk) {\n\t\tthis.buf += chunk;\n\t\tlet pos = 0;\n\t\tlet length = this.buf.length;\n\t\tlet discardTrailingNewline = false;\n\n\t\twhile (pos < length) {\n\t\t\tif (discardTrailingNewline) {\n\t\t\t\tif (this.buf[pos] === '\\n') {\n\t\t\t\t\t++pos;\n\t\t\t\t}\n\t\t\t\tdiscardTrailingNewline = false;\n\t\t\t}\n\n\t\t\tlet lineLength = -1;\n\t\t\tlet fieldLength = -1;\n\n\t\t\tfor (let i = pos; lineLength < 0 && i < length; ++i) {\n\t\t\t\tconst c = this.buf[i];\n\t\t\t\tif (c === ':') {\n\t\t\t\t\tif (fieldLength < 0) {\n\t\t\t\t\t\tfieldLength = i - pos;\n\t\t\t\t\t}\n\t\t\t\t} else if (c === '\\r') {\n\t\t\t\t\tdiscardTrailingNewline = true;\n\t\t\t\t\tlineLength = i - pos;\n\t\t\t\t} else if (c === '\\n') {\n\t\t\t\t\tlineLength = i - pos;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (lineLength < 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis.parseEventStreamLine(pos, fieldLength, lineLength);\n\n\t\t\tpos += lineLength + 1;\n\t\t}\n\n\t\tif (pos === length) {\n\t\t\tthis.buf = '';\n\t\t} else if (pos > 0) {\n\t\t\tthis.buf = this.buf.slice(pos);\n\t\t}\n\t}\n\n\tparseEventStreamLine(pos, fieldLength, lineLength) {\n\t\tif (lineLength === 0) {\n\t\t\ttry {\n\t\t\t\tif (this.data.length > 0 && this.eventName) {\n\t\t\t\t\tconst event = JSON.parse(this.data);\n\t\t\t\t\tevent.name = this.eventName;\n\t\t\t\t\tif (this.eventName !== 'event') {\n\t\t\t\t\t\tthis.emit(this.eventName, event);\n\t\t\t\t\t}\n\t\t\t\t\tthis.emit('event', event);\n\t\t\t\t\tthis.data = '';\n\t\t\t\t}\n\t\t\t\tthis.eventName = undefined;\n\t\t\t} catch (e) {\n\t\t\t\t// do nothing if JSON.parse fails\n\t\t\t}\n\t\t} else if (fieldLength > 0) {\n\t\t\tconst field = this.buf.slice(pos, pos + fieldLength);\n\t\t\tlet step = 0;\n\n\t\t\tif (this.buf[pos + fieldLength + 1] !== ' ') {\n\t\t\t\tstep = fieldLength + 1;\n\t\t\t} else {\n\t\t\t\tstep = fieldLength + 2;\n\t\t\t}\n\t\t\tpos += step;\n\t\t\tconst valueLength = lineLength - step;\n\t\t\tconst value = this.buf.slice(pos, pos + valueLength);\n\n\t\t\tif (field === 'data') {\n\t\t\t\tthis.data += value + '\\n';\n\t\t\t} else if (field === 'event') {\n\t\t\t\tthis.eventName = value;\n\t\t\t} else if (field === 'id') {\n\t\t\t\tthis.lastEventId = value;\n\t\t\t} else if (field === 'retry') {\n\t\t\t\tconst retry = parseInt(value, 10);\n\t\t\t\tif (!Number.isNaN(retry)) {\n\t\t\t\t\tthis.reconnectInterval = retry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default EventStream;\n"]}